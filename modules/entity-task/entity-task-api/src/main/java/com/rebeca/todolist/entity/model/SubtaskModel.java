/**
 * SPDX-FileCopyrightText: (c) 2025 Liferay, Inc. https://liferay.com
 * SPDX-License-Identifier: LGPL-2.1-or-later OR LicenseRef-Liferay-DXP-EULA-2.0.0-2023-06
 */

package com.rebeca.todolist.entity.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.model.BaseModel;
import com.liferay.portal.kernel.model.GroupedModel;
import com.liferay.portal.kernel.model.ShardedModel;
import com.liferay.portal.kernel.model.StagedAuditedModel;

import java.util.Date;

import org.osgi.annotation.versioning.ProviderType;

/**
 * The base model interface for the Subtask service. Represents a row in the &quot;ToDoList_Subtask&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation <code>com.rebeca.todolist.entity.model.impl.SubtaskModelImpl</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in <code>com.rebeca.todolist.entity.model.impl.SubtaskImpl</code>.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see Subtask
 * @generated
 */
@ProviderType
public interface SubtaskModel
	extends BaseModel<Subtask>, GroupedModel, ShardedModel, StagedAuditedModel {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a subtask model instance should use the {@link Subtask} interface instead.
	 */

	/**
	 * Returns the primary key of this subtask.
	 *
	 * @return the primary key of this subtask
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this subtask.
	 *
	 * @param primaryKey the primary key of this subtask
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the uuid of this subtask.
	 *
	 * @return the uuid of this subtask
	 */
	@AutoEscape
	@Override
	public String getUuid();

	/**
	 * Sets the uuid of this subtask.
	 *
	 * @param uuid the uuid of this subtask
	 */
	@Override
	public void setUuid(String uuid);

	/**
	 * Returns the subtask ID of this subtask.
	 *
	 * @return the subtask ID of this subtask
	 */
	public long getSubtaskId();

	/**
	 * Sets the subtask ID of this subtask.
	 *
	 * @param subtaskId the subtask ID of this subtask
	 */
	public void setSubtaskId(long subtaskId);

	/**
	 * Returns the task ID of this subtask.
	 *
	 * @return the task ID of this subtask
	 */
	public long getTaskId();

	/**
	 * Sets the task ID of this subtask.
	 *
	 * @param taskId the task ID of this subtask
	 */
	public void setTaskId(long taskId);

	/**
	 * Returns the title of this subtask.
	 *
	 * @return the title of this subtask
	 */
	@AutoEscape
	public String getTitle();

	/**
	 * Sets the title of this subtask.
	 *
	 * @param title the title of this subtask
	 */
	public void setTitle(String title);

	/**
	 * Returns the status of this subtask.
	 *
	 * @return the status of this subtask
	 */
	public int getStatus();

	/**
	 * Sets the status of this subtask.
	 *
	 * @param status the status of this subtask
	 */
	public void setStatus(int status);

	/**
	 * Returns the group ID of this subtask.
	 *
	 * @return the group ID of this subtask
	 */
	@Override
	public long getGroupId();

	/**
	 * Sets the group ID of this subtask.
	 *
	 * @param groupId the group ID of this subtask
	 */
	@Override
	public void setGroupId(long groupId);

	/**
	 * Returns the company ID of this subtask.
	 *
	 * @return the company ID of this subtask
	 */
	@Override
	public long getCompanyId();

	/**
	 * Sets the company ID of this subtask.
	 *
	 * @param companyId the company ID of this subtask
	 */
	@Override
	public void setCompanyId(long companyId);

	/**
	 * Returns the user ID of this subtask.
	 *
	 * @return the user ID of this subtask
	 */
	@Override
	public long getUserId();

	/**
	 * Sets the user ID of this subtask.
	 *
	 * @param userId the user ID of this subtask
	 */
	@Override
	public void setUserId(long userId);

	/**
	 * Returns the user uuid of this subtask.
	 *
	 * @return the user uuid of this subtask
	 */
	@Override
	public String getUserUuid();

	/**
	 * Sets the user uuid of this subtask.
	 *
	 * @param userUuid the user uuid of this subtask
	 */
	@Override
	public void setUserUuid(String userUuid);

	/**
	 * Returns the user name of this subtask.
	 *
	 * @return the user name of this subtask
	 */
	@AutoEscape
	@Override
	public String getUserName();

	/**
	 * Sets the user name of this subtask.
	 *
	 * @param userName the user name of this subtask
	 */
	@Override
	public void setUserName(String userName);

	/**
	 * Returns the create date of this subtask.
	 *
	 * @return the create date of this subtask
	 */
	@Override
	public Date getCreateDate();

	/**
	 * Sets the create date of this subtask.
	 *
	 * @param createDate the create date of this subtask
	 */
	@Override
	public void setCreateDate(Date createDate);

	/**
	 * Returns the modified date of this subtask.
	 *
	 * @return the modified date of this subtask
	 */
	@Override
	public Date getModifiedDate();

	/**
	 * Sets the modified date of this subtask.
	 *
	 * @param modifiedDate the modified date of this subtask
	 */
	@Override
	public void setModifiedDate(Date modifiedDate);

	@Override
	public Subtask cloneWithOriginalValues();

	public default String toXmlString() {
		return null;
	}

}